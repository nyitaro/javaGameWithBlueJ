#BlueJ class context
comment0.params=player
comment0.target=Player(java.lang.String)
comment0.text=\ Constructor\ requires\ the\ name\ of\ the\ player\r\n\ @param\ player\ is\ the\ name\ of\ the\ player\r\n
comment1.params=player\ filename
comment1.target=Player(java.lang.String,\ java.lang.String)
comment1.text=\ Constructor\ requires\ the\ name\ of\ the\ player\ and\ the\r\n\ name\ of\ the\ file\ storing\ champions\r\n\ @param\ player\ is\ the\ name\ of\ the\ player\r\n\ @param\ filename\ name\ of\ file\ storing\ champions\r\n
comment10.params=name
comment10.target=boolean\ isInArmy(java.lang.String)
comment10.text=\ Returns\ true\ if\ the\ champion\ with\ the\ name\ is\ in\ the\ player's\ army,\ \r\n\ false\ otherwise.\r\n\ @param\ name\ is\ the\ name\ of\ the\ champion\r\n\ @return\ true\ if\ the\ champion\ with\ the\ name\ is\ in\ the\ player's\ army,\ \r\n\ false\ otherwise.\r\n
comment11.params=name
comment11.target=boolean\ dismissChampion(java.lang.String)
comment11.text=\ Dismisses\ a\ champion\ from\ the\ army\ and\ add\ half\ of\ their\ hire\ fee\ \r\n\ to\ the\ treasury.Champion\ must\ be\ active\ or\ resting.Champion\ should\r\n\ now\ be\ for\ hire.\r\n\ pre-condition\:\ isInArmy(name)and\ is\ not\ dead\r\n\ @param\ name\ is\ the\ name\ of\ the\ champion\r\n\ @return\ true\ if\ dismissed,\ else\ false\r\n
comment12.params=name
comment12.target=boolean\ restoreChampion(java.lang.String)
comment12.text=Restores\ a\ champion\ to\ the\ army\ by\ setting\ their\ state\ to\ ACTIVE\ \r\n\ @param\ the\ name\ of\ the\ champion\ to\ be\ restored\r\n\ @return\ true\ if\ restored,\ else\ false\r\n
comment13.params=num
comment13.target=boolean\ isChallenge(int)
comment13.text=\ returns\ true\ if\ the\ number\ represents\ a\ challenge\r\n\ @param\ num\ is\ the\ reference\ number\ of\ the\ challenge\r\n\ @returns\ true\ if\ the\ reference\ number\ represents\ a\ challenge\r\n
comment14.params=challNo
comment14.target=java.lang.String\ meetChallenge(int)
comment14.text=\ Meets\ the\ challenge\ represented\ by\ the\ challenge\ number\ (or\ returns\ \r\n\ "\ -\ no\ such\ challenge").Find\ a\ champion\ from\ the\ army\ who\ can\ meet\ the\ \r\n\ challenge\ and\ return\ a\ result\ which\ is\ one\ of\ the\ following\:\ \u201CChallenge\ \r\n\ won\ by...\u201C\ \u2013\ add\ reward\ to\ treasury,\ set\ the\ champion\ to\ restingand\ add\ \r\n\ the\ name\ of\ champion,\ \u201CChallenge\ lost\ as\ no\ champion\ available\u201D\ \u2013\ deduct\ \r\n\ reward\ from\ treasury,\u201CChallenge\ lost\ on\ skill\ level\u201D-\ deduct\ reward\ from\ \r\n\ treasury,\ the\ champion\ is\ killed,\ so\ add\ "<champion\ name>\ is\ dead"\ to\ the\ \r\n\ return\ String.\ If\ the\ challenge\ is\ lost\ and\ there\ is\ no\ money\ left,\ add\ \r\n\ "You\ have\ NO\ money\ in\ the\ treasury".\r\n\ @param\ challNo\ is\ the\ reference\ number\ of\ the\ challenge\r\n\ @return\ a\ String\ showing\ the\ result\ of\ meeting\ the\ challenge\r\n
comment15.params=num
comment15.target=java.lang.String\ getChallenge(int)
comment15.text=\ Provides\ a\ String\ representation\ of\ a\ challenge\ given\ by\ challenge\ number\r\n\ pre-condition\ isChallenge(num)\r\n\ @param\ num\ the\ number\ of\ the\ challenge\r\n\ @return\ returns\ a\ String\ representation\ of\ a\ challenge\ given\ by\ \r\n\ the\ challenge\ number\r\n
comment16.params=
comment16.target=java.lang.String\ getAllChallenges()
comment16.text=\ Provides\ a\ String\ representation\ of\ all\ requests\ \r\n\ @return\ returns\ a\ String\ representation\ of\ of\ all\ requests\r\n
comment17.params=
comment17.target=void\ setupChampions()
comment17.text=\ Setting\ up\ Champion\ objects\ manually\ for\ testing\ on\ other\ classes\r\n
comment18.params=
comment18.target=void\ setupChallenges()
comment18.text=\ Setting\ up\ Challenges\ objects\ manually\ for\ testing\ on\ other\ classes\r\n
comment19.params=fileName
comment19.target=void\ readChampions(java.lang.String)
comment19.text=\ reads\ data\ about\ champions\ from\ a\ text\ file\ and\ stores\ in\ collection\ of\ \r\n\ champions.Data\ in\ the\ file\ is\ \ "comma\ separated"\ and\ so\ editable\r\n\ @param\ fileName\ name\ of\ the\ file\ to\ be\ read\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=Returns\ the\ name\ of\ the\ player\ \r\n\ @return\ is\ the\ name\ of\ the\ player\ \r\n
comment20.params=
comment20.target=void\ readChallenges()
comment20.text=\ reads\ data\ about\ challenges\ from\ an\ object\ file\ and\ stores\ in\ collection\ of\ \r\n\ champions.Data\ in\ the\ file\ is\ not\ editable\r\n\ @param\ fileName\ name\ of\ the\ file\ to\ be\ read\r\n
comment21.params=fname
comment21.target=void\ saveGame(java.lang.String)
comment21.text=\r\n\ Saves\ the\ state\ of\ the\ game\ to\ the\ file\ with\ the\ given\ name\ \r\n\ @param\ filename\ the\ name\ of\ the\ file\ \r\n
comment22.params=fname
comment22.target=Game\ restoreGame(java.lang.String)
comment22.text=\ \r\n\ Restores\ the\ game\ from\ the\ file\ with\ the\ given\ name\r\n\ @param\ filename\ the\ name\ of\ the\ file\ \r\n
comment23.params=name
comment23.target=boolean\ isChampion(java.lang.String)
comment23.text=\ \r\n\ Checks\ whether\ a\ champion\ is\ present\ on\ allChampions\ using\ the\ given\ name\r\n\ @param\ name\ the\ name\ of\ the\ champion\r\n
comment3.params=
comment3.target=java.lang.String\ toString()
comment3.text=Returns\ a\ String\ representation\ of\ the\ state\ of\ the\ game,\r\n\ including\ the\ name\ of\ the\ player,\ state\ of\ the\ treasury,whether\ \r\n\ player\ has\ lost\ or\ is\ still\ OK,\ and\ the\ champions\ in\ the\ army\ \r\n\ (or,\ "No\ champions"\ if\ army\ is\ empty)\r\n\ @return\ a\ String\ representation\ of\ the\ state\ of\ the\ game,\r\n\ including\ the\ name\ of\ the\ player,\ state\ of\ the\ treasury,\ whether\ \r\n\ player\ has\ lost\ or\ is\ still\ OK,\ and\ the\ champions\ in\ the\ army\ \r\n\ (or,\ "No\ champions"\ if\ army\ is\ empty)\r\n
comment4.params=
comment4.target=int\ getMoney()
comment4.text=\ returns\ the\ amount\ of\ money\ in\ the\ treasur\r\n\ @returns\ the\ amount\ of\ money\ in\ the\ treasury\r\n
comment5.params=
comment5.target=boolean\ hasLost()
comment5.text=\ returns\ true\ if\ treasury\ <\=0\ and\ the\ army\ has\ no\ champions\ \r\n\ who\ can\ be\ dismissed.\ \r\n\ @returns\ true\ if\ treasury\ <\=0\ and\ the\ army\ has\ no\ champions\ \r\n\ who\ can\ be\ dismissed.\ \r\n
comment6.params=
comment6.target=java.lang.String\ getAllChampionsForHire()
comment6.text=Returns\ a\ String\ representation\ of\ all\ champions\ available\ for\ hire\r\n\ @return\ a\ String\ representation\ of\ all\ champions\ available\ for\ hire\r\n
comment7.params=name
comment7.target=java.lang.String\ getChampion(java.lang.String)
comment7.text=\ Returns\ details\ of\ a\ champion\ with\ the\ given\ name\r\n\ @return\ details\ of\ a\ champion\ with\ the\ given\ name\r\n
comment8.params=name
comment8.target=java.lang.String\ hireChampion(java.lang.String)
comment8.text=\ Allows\ a\ champion\ to\ be\ hired\ for\ the\ army,\ if\ there\ \r\n\ is\ enough\ money\ in\ the\ treasury\ for\ their\ hire\ fee.The\ champion's\ \r\n\ state\ is\ set\ to\ "active"\r\n\ @param\ name\ is\ the\ name\ of\ the\ champion\r\n\ @return\ name\ and\ either\ "-\ not\ found"\ if\ champion\ not\ found,or\ "-\ cannot\ \r\n\ be\ hired"\ if\ champion\ is\ not\ for\ hire,already\ hired/dead,\ "-\ hired\ and\ \r\n\ avialable"\ if\ champion\ hired,\ "-\ not\ enough\ money"\ if\ not\ enough\ money\r\n\ in\ the\ treasury\r\n
comment9.params=
comment9.target=java.lang.String\ getArmy()
comment9.text=Returns\ a\ String\ representation\ of\ the\ champions\ in\ the\ player's\ army\r\n\ with\ an\ appropriate\ header,\ or\ the\ message\ "No\ champions\ hired"\r\n\ @return\ a\ String\ representation\ of\ the\ champions\ in\ the\ player's\ army\r\n
numComments=24
